<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// create any variables which will be relevant later
global.mouse_press = false;
global.player_speed = 3;
global.target_x = 0;
global.target_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// variables for directions
right_key = keyboard_check(ord('D'));
right_arrow = keyboard_check(vk_right);
left_key = keyboard_check(ord('A'));
left_arrow = keyboard_check(vk_left);
up_key = keyboard_check(ord('W'));
up_arrow = keyboard_check(vk_up);
down_key = keyboard_check(ord('S'));
down_arrow = keyboard_check(vk_down);

// variables for mouse input and position
if (mouse_check_button(mb_left)) {
    global.mouse_press = true;
    global.target_x = mouse_obj.x;
    global.target_y = mouse_obj.y;
    position_obj.x = global.target_x;
    position_obj.y = global.target_y;
    position_obj.visible = true;
}

distance = point_distance(x, y, global.target_x, global.target_y);

// move player position if mouse has been pressed
if (global.mouse_press and distance &gt; 16) {
    move_towards_point(global.target_x, global.target_y, 15);
} else {
    speed = 0;
    global.mouse_press = false;
    position_obj.visible = false;
}

// move in direction depending on input, use else if for directions which are mutually exclusive
if (not global.mouse_press) {  // only move if mouse is not pressed
    if (right_key or right_arrow) {
        hspeed = global.player_speed;
    } else if (left_key or left_arrow) {
        hspeed = global.player_speed * -1;
    }

    if (up_key or up_arrow) {
        vspeed = global.player_speed * -1;
    } else if (down_key or down_arrow) {
        vspeed = global.player_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
